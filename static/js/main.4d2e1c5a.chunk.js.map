{"version":3,"sources":["assets/img/demo1-0901996381-1.jpg","assets/img/logo.png","assets/img/aji-picante.svg","assets/img/hoja.svg","Context/ProductsInCartContext.jsx","components/NavBar/navBar.jsx","components/Home/home.jsx","Context/ProductContext.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","createContext","NavBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Home","for","required","selected","disabled","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,yQCGRC,0BCCpB,SAASC,IAGpB,OACI,yBAAKC,UAAU,yDACf,yBAAKA,UAAU,aACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,WACA,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,sBACZ,4BACE,uBAAGC,KAAK,KAAI,uBAAGD,UAAU,wBAE3B,4BACE,uBAAGC,KAAK,KAAI,uBAAGD,UAAU,uBAE3B,4BACE,uBAAGC,KAAK,KAAI,uBAAGD,UAAU,uBAIjC,yBAAKA,UAAU,2BAA2BQ,GAAG,0BAE3C,4BAAQR,UAAU,iCAAiCS,GAAG,aAAtD,Y,qBCnCG,SAASC,IACtB,OACE,yBAAKV,UAAU,cACb,yBAAMA,UAAU,8CACd,yBAAKA,UAAU,aACb,iDACA,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,mBAAb,KADF,oBAGA,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,eAAb,KADF,6CAON,yBAAKA,UAAU,8CACb,0BAAMA,UAAU,SACd,6BACE,yBAAKA,UAAU,QACb,2BAAOW,IAAI,sBAAX,UACA,2BACET,KAAK,OACLF,UAAU,eACVQ,GAAG,qBACHI,UAAQ,KAGZ,yBAAKZ,UAAU,QACb,2BAAOW,IAAI,sBAAX,YACA,2BACET,KAAK,OACLF,UAAU,eACVQ,GAAG,qBACHI,UAAQ,MAId,6BACE,yBAAKZ,UAAU,QACb,2BAAOW,IAAI,sBAAX,aACA,2BACET,KAAK,OACLF,UAAU,eACVQ,GAAG,qBACHI,UAAQ,KAGZ,yBAAKZ,UAAU,QACb,2BAAOW,IAAI,sBAAX,aACA,4BAAQX,UAAU,gBAAgBQ,GAAG,qBAAqBI,UAAQ,GAChE,4BAAQC,UAAQ,EAACC,UAAQ,EAACC,MAAM,IAAhC,cAGA,yCACA,0CACA,yCACA,oDAIN,yBAAKf,UAAU,cACb,yBAAKA,UAAU,cACb,2BACEA,UAAU,mBACVE,KAAK,WACLa,MAAM,GACNP,GAAG,gBACHI,UAAQ,IAEV,2BAAOZ,UAAU,mBAAmBW,IAAI,iBAAxC,qCAGA,yBAAKX,UAAU,oBAAf,mDAKJ,4BAAQA,UAAU,uBAAuBE,KAAK,UAA9C,kB,MC9EkBJ,0B,MCuBbkB,MATf,WACE,OACE,kBAAC,WAAD,KACI,kBAACjB,EAAD,MACA,kBAACW,EAAD,QCTYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4d2e1c5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/demo1-0901996381-1.381d6250.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.20c2322d.png\";","module.exports = __webpack_public_path__ + \"static/media/aji-picante.f59b2a87.svg\";","module.exports = __webpack_public_path__ + \"static/media/hoja.e126423d.svg\";","import React,{useState,createContext} from 'react';\r\n\r\n\r\nexport const ProductsInCartContext=createContext();\r\n\r\nexport const ProductsInCardProvider=(props)=>{\r\n \r\n  \r\n\r\n    const [productsInCart,setProductsInCart]=useState([\r\n      \r\n    ]);\r\n\r\n\r\n    return (\r\n        <ProductsInCartContext.Provider value={[productsInCart,setProductsInCart]}>\r\n            {props.children}\r\n        </ProductsInCartContext.Provider>\r\n    )\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function NavBar(){\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary-color\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">TuPIZZA</a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"social-media\">\r\n              <ul className=\"navbar-nav mx-auto\">\r\n                <li>\r\n                  <a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n         \r\n            <button className=\"btn btn-lg btn-outline-warning\" to='/products'>Login</button>\r\n         \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"header row\" >\r\n      <div  className=\"heading-container-left  col-lg-6 col-md-12\">\r\n        <div className=\"left-info\"  >\r\n          <h1 >Entrega Gratis!!!</h1>\r\n          <ul className=\"navbar-nav \"  >\r\n            <li className=\"nav-item\" >\r\n              <i className=\"fa fa-phone-alt\"> </i> +53 7 303-33-33\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <i className=\"fa fa-clock\"> </i> Todos los dias de 11:00 AM - 23:00 PM\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"heading-container-right col-lg-6 col-md-12\">\r\n        <form className=\"col-8\">\r\n          <div>\r\n            <div className=\"mb-3\">\r\n              <label for=\"validationServer01\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"validationServer01\"\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label for=\"validationServer02\">Telefono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"validationServer02\"\r\n                required\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"mb-3\">\r\n              <label for=\"validationServer03\">Direccion</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"validationServer03\"\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label for=\"validationServer04\">Municipio</label>\r\n              <select className=\"custom-select\" id=\"validationServer04\" required>\r\n                <option selected disabled value=\"\">\r\n                  Seleccione\r\n                </option>\r\n                <option>Playa</option>\r\n                <option>Vedado</option>\r\n                <option>Cerro</option>\r\n                <option>Centro Habana</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id=\"invalidCheck3\"\r\n                required\r\n              />\r\n              <label className=\"form-check-label\" for=\"invalidCheck3\">\r\n                Acepto los Terminos y Condiciones\r\n              </label>\r\n              <div className=\"invalid-feedback\">\r\n                Por Favor, Acepte los Terminos y Condiciones.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-warning mb-5\" type=\"submit\">\r\n            Registrarse\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState,createContext} from 'react';\r\n\r\n\r\nexport const ProductContext=createContext();\r\n\r\nexport const ProductProvider=(props)=>{\r\n \r\n    const [products,setProducts]= useState([\r\n        {\r\n            id:\"0\",\r\n            name: 'Pizza de Jamon',\r\n            price: '5.90',\r\n            ingredients: 'Garlic Flatbread with Mozzarella · Parmesan · Garlic · Rosemary'\r\n        },\r\n        {   id: \"1\",\r\n            name: 'Pizza Napolitana',\r\n            price: '4.90',\r\n            ingredients: ' Mozzarella · Parmesan · Garlic · Rosemary'\r\n        },\r\n        {    id: \"2\",\r\n            name: 'Pizza Chorizo',\r\n            price: '4.90',\r\n            ingredients: ' Chorizo · Parmesan · Garlic · Rosemary'\r\n        },\r\n        {    id: \"3\",\r\n            name: 'Pizza de Cebolla',\r\n            price: '4.90',\r\n            ingredients: ' Ceboola · Mozzarella · Parmesan · Garlic · Rosemary'\r\n        },\r\n    ])\r\n\r\n   \r\n\r\n    return (\r\n        <ProductContext.Provider value={[products,setProducts]}>\r\n            {props.children}\r\n        </ProductContext.Provider>\r\n    )\r\n\r\n\r\n\r\n}\r\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport NavBarLogged from \"./components/NavBar/navbarLogged\";\nimport NavBar from \"./components/NavBar/navBar\";\nimport ProductCard from \"./components/ProductCard/ProductCard\";\nimport Home from \"./components/Home/home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProductCardsContainer from \"./components/ProductCard/productCardsContainer\";\nimport { ProductProvider } from \"./Context/ProductContext\";\nimport { ProductsInCardProvider } from \"./Context/ProductsInCartContext\";\n/*<ProductsInCardProvider>\n        <NavBarLogged />\n\n        <ProductProvider>\n          <ProductCardsContainer />\n        </ProductProvider>\n      </ProductsInCardProvider>*/\nfunction App() {\n  return (\n    <Fragment>\n        <NavBar/>\n        <Home/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport  \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/styles.css\";\nimport \"./assets/css/all.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}